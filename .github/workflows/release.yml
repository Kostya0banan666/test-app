name: Release Image

on:
  push:
    tags:
      - "*"

permissions:
  contents: read
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest

    env:
      CHART_DIR: charts/test-app

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      # ─────────────────────────────────────────────────────
      #               DOCKER IMAGE → GHCR (OCI)
      # ─────────────────────────────────────────────────────

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR (Docker)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ github.ref_name }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # ─────────────────────────────────────────────────────
      #               HELM CHART → GHCR (OCI)
      # ─────────────────────────────────────────────────────

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.18.3

      - name: Bump Chart.yaml version fields
        run: |
          sed -i "s/^version:.*/version: ${GITHUB_REF_NAME}/" "$CHART_DIR/Chart.yaml"
          sed -i "s/^appVersion:.*/appVersion: \"${GITHUB_REF_NAME}\"/" "$CHART_DIR/Chart.yaml"
          echo "After bump:"
          grep -E '^(version|appVersion):' -n "$CHART_DIR/Chart.yaml"

      - name: Update values.yaml (image repo & tag)
        uses: mikefarah/yq@v4
        with:
          cmd: |
            yq -i '
              .image.repository = "ghcr.io/${{ github.repository }}" |
              .image.tag = "${{ github.ref_name }}"
            ' "$CHART_DIR/values.yaml"

      - name: Helm lint
        run: helm lint "$CHART_DIR"

      - name: Package chart
        run: |
          mkdir -p dist
          helm package "$CHART_DIR" --destination dist
          ls -la dist

      - name: Login to GHCR (Helm OCI)
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | \
            helm registry login ghcr.io \
              --username "${{ github.actor }}" \
              --password-stdin

      - name: Push chart to GHCR (OCI)
        run: |
          CHART_TGZ=$(ls dist/*.tgz)
          REPO_LOWER=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')
          TARGET="oci://ghcr.io/${REPO_LOWER}/charts"
          echo "Pushing $CHART_TGZ to $TARGET"
          helm push "$CHART_TGZ" "$TARGET"
          echo "Pushed: ${TARGET}/$(basename "$CHART_TGZ" .tgz)"
